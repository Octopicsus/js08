console.log('#8. JavaScript homework example file');

/*
 * #1
 *
 * Задача: Создание и добавление DOM-элемента в указанный контейнер.
 * Цель: Разработать функцию createDomElement, которая принимает название тега, текстовое содержимое и контейнер, в который нужно добавить новый элемент. Функция создаёт новый элемент с указанным тегом и текстовым содержимым и добавляет этот элемент в заданный контейнер.
 *
 * Требования:
 * 1. Функция должна принимать три параметра:
 *    - tagName - строка, указывающая название тега нового элемента.
 *    - textContent - строка, указывающая текстовое содержимое нового элемента.
 *    - container - DOM-элемент, в который будет добавлен новый созданный элемент.
 * 2. Функция должна создать новый DOM-элемент с указанным тегом и текстовым содержимым.
 * 3. Созданный элемент должен быть добавлен в указанный контейнер.
 * 4. Функция возвращает ссылку на созданный элемент, чтобы можно было взаимодействовать с ним далее.
 * 5. Функция должна быть экспортирована для использования в других модулях и тестирования.
 */

function createDomElement(tagName, textContent, container) {
  // code here
}

// Демонстрация использования функции
// const container = document.body // В качестве примера используем body как контейнер
// console.log(createDomElement('p', 'This paragraph has been added to the specified container.', container));

/*
 * #2
 *
 * Задача: Установить cookie с полезной информацией на 10 секунд.
 * Цель: Разработать функцию setUserInfoCookie, которая устанавливает cookie с именем userInfo и значением в формате "ключ=значение", которое хранит полезную информацию о пользователе (например, выбранный язык интерфейса) и имеет срок действия 10 секунд. Значение cookie должно быть корректно закодировано для безопасного хранения в веб-браузере.
 *
 * Требования к функции:
 *
 * 1. Функция принимает два аргумента: key (название параметра) и value (значение параметра).
 * 2. Функция кодирует значение параметра для корректного хранения в cookie.
 * 3. Функция устанавливает cookie userInfo с закодированным значением "ключ=значение" и сроком действия 10 секунд.
 * 4. При установке cookie функция выводит информационное сообщение в консоль об успешном сохранении данных.
 */

function setUserInfoCookie(key, value) {
  // code here
}

// Демонстрация использования функции
// setUserInfoCookie('language', 'en');

/*
 * #3
 *
 * Задача: Работа с sessionStorage для хранения и получения данных пользователя.
 * Цель: Создать две функции, saveUserInfo и getUserInfo, для взаимодействия с sessionStorage. Первая функция должна сохранять информацию о пользователе, а вторая — получать её. Кроме того, обе функции должны выводить соответствующие сообщения в консоль об успешном сохранении или получении данных.
 *
 * Требования к saveUserInfo:
 *
 * 1. Функция принимает два параметра: ключ (key) и значение (value).
 * 2. Сохраняет пару ключ-значение в sessionStorage.
 * 3. Выводит в консоль сообщение формата "Saved key: value".
 *
 * Требования к getUserInfo:
 *
 * 1. Функция принимает один параметр: ключ (key).
 * 2. Получает значение по указанному ключу из sessionStorage.
 * 3. Выводит в консоль сообщение формата "Retrieved key: value", где value — это значение, полученное из sessionStorage.
 * 4. Возвращает значение, полученное из sessionStorage.
 */

function saveUserInfo(key, value) {
  // code here
}

function getUserInfo(key) {
  // code here
}

// Демонстрация использования функций
// saveUserInfo('username', 'JohnDoe');
// console.log(getUserInfo('username')); // Выведет: JohnDoe

export { createDomElement, setUserInfoCookie, saveUserInfo, getUserInfo };
